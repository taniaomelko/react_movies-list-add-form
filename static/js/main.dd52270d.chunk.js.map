{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","transformText","text","slice","toUpperCase","NewMovie","state","titles","Object","keys","onnAdd","target","setState","name","value","handleSubmit","event","preventDefault","addMovie","props","onSubmit","this","required","onChange","type","Component","App","moviesFromServer","prevState","ReactDOM","render","document","getElementById"],"mappings":"6xEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,iBCtBV,SAASK,EAAcC,GACrB,OAAOA,EAAKC,MAAM,EAAG,GAAGC,cAAgBF,EAAKC,MAAM,GAG9C,IAAME,EAAb,4MACEC,MAAQ,CACNpB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,IANZ,EASEO,OAASC,OAAOC,KAAK,EAAKH,OAT5B,EAWEI,OAAS,YAAiB,IAAdC,EAAa,EAAbA,OACV,EAAKC,SAAL,eACGD,EAAOE,KAAOZ,EAAcU,EAAOG,UAb1C,EAiBEC,aAAe,SAACC,GACdA,EAAMC,iBADkB,IAGhBC,EAAa,EAAKC,MAAlBD,SAER,EAAKX,OAAOV,KAAI,SAAAX,GAAK,OACnB,EAAK0B,SAAL,eACG1B,EAAQ,QAIbgC,EAAS,EAAKZ,QA5BlB,uDA+BY,IAAD,OACP,OACE,0BACEhB,UAAU,kBACV8B,SAAUC,KAAKN,cAEdM,KAAKd,OAAOV,KAAI,SAAAX,GAAK,OACpB,2BACEI,UAAU,oBAETW,EAAcf,GACf,2BACEI,UAAU,mBACVuB,KAAM3B,EACN4B,MAAO,EAAKR,MAAMpB,GAClBA,MAAOA,EACPoC,UAAQ,EACRC,SAAU,EAAKb,aAKrB,4BACEc,KAAK,SACLlC,UAAU,qBAFZ,kBArDR,GAA8BmC,a,OCFjBC,EAAb,4MACEpB,MAAQ,CACNV,OAAQ+B,GAFZ,EAKET,SAAW,SAACpB,GACV,EAAKc,UAAS,SAAAgB,GAAS,MAAK,CAC1BhC,OAAO,GAAD,mBAAMgC,EAAUhC,QAAhB,CAAwBE,SAPpC,uDAWY,IACAF,EAAWyB,KAAKf,MAAhBV,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAU4B,SAAUG,KAAKH,iBApBnC,GAAyBO,aCDzBI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.dd52270d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nfunction transformText(text) {\n  return text.slice(0, 1).toUpperCase() + text.slice(1);\n}\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  titles = Object.keys(this.state);\n\n  onnAdd = ({ target }) => {\n    this.setState({\n      [target.name]: transformText(target.value),\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { addMovie } = this.props;\n\n    this.titles.map(title => (\n      this.setState({\n        [title]: '',\n      })\n    ));\n\n    addMovie(this.state);\n  }\n\n  render() {\n    return (\n      <form\n        className=\"new-movie__form\"\n        onSubmit={this.handleSubmit}\n      >\n        {this.titles.map(title => (\n          <label\n            className=\"new-movie__label\"\n          >\n            {transformText(title)}\n            <input\n              className=\"new-movie__input\"\n              name={title}\n              value={this.state[title]}\n              title={title}\n              required\n              onChange={this.onnAdd}\n            />\n          </label>\n        ))}\n\n        <button\n          type=\"submit\"\n          className=\"new-movie__button\"\n        >\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}