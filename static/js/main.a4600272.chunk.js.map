{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/input/Input.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","Input","value","onAdd","transformText","name","onChange","initialState","text","slice","toUpperCase","NewMovie","state","target","setState","handleSubmit","event","preventDefault","addMovie","props","onSubmit","this","Object","entries","element","type","Component","App","moviesFromServer","prevState","ReactDOM","render","document","getElementById"],"mappings":"+xEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,kBCvBGK,G,MAAQ,SAAC,GAA4C,IAA1Cf,EAAyC,EAAzCA,MAAOgB,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cAC3C,OACE,2BACEd,UAAU,oBAETc,EAAclB,GACf,2BACEI,UAAU,mBACVe,KAAMnB,EACNgB,MAAOA,EACPI,SAAUH,OCRZI,EAAe,CACnBrB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,IAGV,SAASI,EAAcI,GACrB,OAAOA,EAAKC,MAAM,EAAG,GAAGC,cAAgBF,EAAKC,MAAM,GAG9C,IAAME,EAAb,4MACEC,MADF,eAEOL,GAFP,EAKEJ,MAAQ,YAAiB,IAAdU,EAAa,EAAbA,OACT,EAAKC,SAAL,eACGD,EAAOR,KAAOD,EAAcS,EAAOX,UAP1C,EAWEa,aAAe,SAACC,GACdA,EAAMC,kBAINC,EAFqB,EAAKC,MAAlBD,UAEC,EAAKN,OAEd,EAAKE,SAAL,eAAmBP,KAlBvB,uDAqBY,IAAD,OACP,OACE,0BACEjB,UAAU,kBACV8B,SAAUC,KAAKN,cAEdO,OAAOC,QAAQF,KAAKT,OAAOf,KAAI,SAAA2B,GAAO,OACrC,kBAAC,EAAD,CACEtC,MAAOsC,EAAQ,GACftB,MAAOsB,EAAQ,GACfrB,MAAO,EAAKA,MACZC,cAAeA,OAInB,4BACEqB,KAAK,SACLnC,UAAU,qBAFZ,kBApCR,GAA8BoC,a,OCXjBC,EAAb,4MACEf,MAAQ,CACNhB,OAAQgC,GAFZ,EAKEV,SAAW,SAACpB,GACV,EAAKgB,UAAS,SAAAe,GAAS,MAAK,CAC1BjC,OAAO,GAAD,mBAAMiC,EAAUjC,QAAhB,CAAwBE,SAPpC,uDAWY,IACAF,EAAWyB,KAAKT,MAAhBhB,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAU4B,SAAUG,KAAKH,iBApBnC,GAAyBQ,aCDzBI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a4600272.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Input = ({ title, value, onAdd, transformText }) => {\n  return (\n    <label\n      className=\"new-movie__label\"\n    >\n      {transformText(title)}\n      <input\n        className=\"new-movie__input\"\n        name={title}\n        value={value}\n        onChange={onAdd}\n      />\n    </label>\n  );\n};\n\nInput.propTypes = {\n  title: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onAdd: PropTypes.func.isRequired,\n  transformText: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\nimport { Input } from '../input';\n\nconst initialState = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\nfunction transformText(text) {\n  return text.slice(0, 1).toUpperCase() + text.slice(1);\n}\n\nexport class NewMovie extends Component {\n  state = {\n    ...initialState,\n  };\n\n  onAdd = ({ target }) => {\n    this.setState({\n      [target.name]: transformText(target.value),\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { addMovie } = this.props;\n\n    addMovie(this.state);\n\n    this.setState({ ...initialState });\n  }\n\n  render() {\n    return (\n      <form\n        className=\"new-movie__form\"\n        onSubmit={this.handleSubmit}\n      >\n        {Object.entries(this.state).map(element => (\n          <Input\n            title={element[0]}\n            value={element[1]}\n            onAdd={this.onAdd}\n            transformText={transformText}\n          />\n        ))}\n\n        <button\n          type=\"submit\"\n          className=\"new-movie__button\"\n        >\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}